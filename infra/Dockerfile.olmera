# ===== STAGE 1: deps =====
FROM ubuntu:24.04 AS dependencies
RUN apt-get update && apt-get install -y --no-install-recommends cmake git \
    unzip build-essential ca-certificates curl zip unzip tar \
    pkg-config ninja-build autoconf automake libtool \
    python3 \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /opt
COPY vcpkg.json /opt
RUN vcpkgCommitId=$(grep '.builtin-baseline' vcpkg.json | awk -F: '{print $2}' | tr -d '," ') \
  && echo "vcpkg commit ID: $vcpkgCommitId" \
  && git clone https://github.com/Microsoft/vcpkg.git \
  && cd vcpkg \
  && git checkout $vcpkgCommitId \
  && ./bootstrap-vcpkg.sh

WORKDIR /opt/vcpkg
COPY vcpkg.json /opt/vcpkg/
RUN /opt/vcpkg/vcpkg --feature-flags=binarycaching,manifests,versions install

# ===== STAGE 2: build =====
FROM dependencies AS build
COPY . /srv/
WORKDIR /srv
RUN export VCPKG_ROOT=/opt/vcpkg/ \
  && cmake --preset linux-release -DTOGGLE_BIN_FOLDER=ON \
  && cmake --build --preset linux-release

# ===== STAGE 3: runtime =====
FROM ubuntu:24.04
VOLUME [ "/data" ]

# binario
COPY --from=build /srv/build/linux-release/bin/canary /bin/canary

# assets y configs que espera start.sh
COPY LICENSE *.sql key.pem /canary/
COPY data /canary/data
COPY data-canary /canary/data-canary
COPY data-otservbr-global /canary/data-otservbr-global
COPY config.lua.dist /canary/config.lua
WORKDIR /canary

# ðŸ”§ runtime tools que usa start.sh (aÃ±adimos wget)
RUN apt-get update && apt-get install -y --no-install-recommends \
    mariadb-client curl wget \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# scripts del repo
COPY docker/data/01-test_account.sql 01-test_account.sql
COPY docker/data/02-test_account_players.sql 02-test_account_players.sql
COPY docker/data/start.sh start.sh

ENTRYPOINT ["/canary/start.sh"]
